{"ast":null,"code":"var _jsxFileName = \"/mnt/c/workspace-artemis/capstone/capstone-project/src/components/Profile.js\",\n    _s = $RefreshSig$();\n\nimport Navbar from \"./Navbar\";\nimport { useLocation, useParams } from 'react-router-dom';\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport KhaosMarketplaceJSON from \"../abi/KhaosMarketplace.json\";\nimport KhaosNFTFactoryJSON from \"../abi/KhaosNFTFactory.json\";\nimport NFTTile from \"./NFTTile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n\n  const [data, updateData] = useState([]);\n  const [dataFetched, updateFetched] = useState(false);\n  const [address, updateAddress] = useState(\"0x\");\n  const [totalPrice, updateTotalPrice] = useState(\"0\");\n\n  async function getNFTData(tokenId) {\n    const ethers = require(\"ethers\");\n\n    let sumPrice = 0; //After adding your Hardhat network to your metamask, this code will get providers and signers\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const addr = await signer.getAddress(); //Pull the deployed contract instance\n\n    let contract = new ethers.Contract(KhaosNFTFactoryJSON.address, KhaosNFTFactoryJSON.abi, signer);\n    let transaction = await contract.nfts(addr);\n    console.log(transaction);\n    /*\n    * Below function takes the metadata from tokenURI and the data returned by getOwnCollections() contract function\n    * and creates an object of information that is to be displayed\n    */\n\n    const items = await Promise.all(transaction.map(async i => {\n      const tokenURI = await contract.tokenURI(i.tokenId);\n      let meta = await axios.get(tokenURI);\n      meta = meta.data;\n      let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\n      let item = {\n        price,\n        tokenId: i.tokenId.toNumber(),\n        seller: i.seller,\n        owner: i.owner,\n        image: meta.image,\n        name: meta.name,\n        description: meta.description\n      };\n      sumPrice += Number(price);\n      return item;\n    }));\n    updateData(items);\n    updateFetched(true);\n    updateAddress(addr);\n    updateTotalPrice(sumPrice.toPrecision(3));\n  }\n\n  const params = useParams();\n  const tokenId = params.tokenId;\n  if (!dataFetched) getNFTData(tokenId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profileClass\",\n    style: {\n      \"min-height\": \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileClass\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex text-center flex-col mt-11 md:text-2xl text-white\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold\",\n            children: \"Wallet Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row text-center justify-center mt-10 md:text-2xl text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold\",\n            children: \"No. of NFTs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), data.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-20\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold\",\n            children: \"Total Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), totalPrice, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col text-center items-center mt-11 text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold\",\n          children: \"Your NFTs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center flex-wrap max-w-screen-xl\",\n          children: data.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(NFTTile, {\n              data: value\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 28\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-10 text-xl\",\n          children: data.length == 0 ? \"Oops, No NFT data to display (Are you logged in?)\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"2EsCq+A3YKmNbGfcrpDlqLJtmds=\", false, function () {\n  return [useParams];\n});\n\n_c = Profile;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["Navbar","useLocation","useParams","useState","axios","KhaosMarketplaceJSON","KhaosNFTFactoryJSON","NFTTile","Profile","data","updateData","dataFetched","updateFetched","address","updateAddress","totalPrice","updateTotalPrice","getNFTData","tokenId","ethers","require","sumPrice","provider","providers","Web3Provider","window","ethereum","signer","getSigner","addr","getAddress","contract","Contract","abi","transaction","nfts","console","log","items","Promise","all","map","i","tokenURI","meta","get","price","utils","formatUnits","toString","item","toNumber","seller","owner","image","name","description","Number","toPrecision","params","length","value","index"],"sources":["/mnt/c/workspace-artemis/capstone/capstone-project/src/components/Profile.js"],"sourcesContent":["import Navbar from \"./Navbar\";\nimport { useLocation, useParams } from 'react-router-dom';\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport KhaosMarketplaceJSON from \"../abi/KhaosMarketplace.json\";\nimport KhaosNFTFactoryJSON from \"../abi/KhaosNFTFactory.json\";\nimport NFTTile from \"./NFTTile\";\n\nexport default function Profile () {\n    const [data, updateData] = useState([]);\n    const [dataFetched, updateFetched] = useState(false);\n    const [address, updateAddress] = useState(\"0x\");\n    const [totalPrice, updateTotalPrice] = useState(\"0\");\n\n    async function getNFTData(tokenId) {\n        const ethers = require(\"ethers\");\n        let sumPrice = 0;\n        //After adding your Hardhat network to your metamask, this code will get providers and signers\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const addr = await signer.getAddress();\n\n        //Pull the deployed contract instance\n        let contract = new ethers.Contract(KhaosNFTFactoryJSON.address, KhaosNFTFactoryJSON.abi, signer)\n        let transaction = await contract.nfts(addr);\n        console.log(transaction)\n\n        /*\n        * Below function takes the metadata from tokenURI and the data returned by getOwnCollections() contract function\n        * and creates an object of information that is to be displayed\n        */\n        \n        const items = await Promise.all(transaction.map(async i => {\n            const tokenURI = await contract.tokenURI(i.tokenId);\n            let meta = await axios.get(tokenURI);\n            meta = meta.data;\n\n            let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\n            let item = {\n                price,\n                tokenId: i.tokenId.toNumber(),\n                seller: i.seller,\n                owner: i.owner,\n                image: meta.image,\n                name: meta.name,\n                description: meta.description,\n            }\n            sumPrice += Number(price);\n            return item;\n        }))\n\n        updateData(items);\n        updateFetched(true);\n        updateAddress(addr);\n        updateTotalPrice(sumPrice.toPrecision(3));\n    }\n\n    const params = useParams();\n    const tokenId = params.tokenId;\n    if(!dataFetched)\n        getNFTData(tokenId);\n\n    return (\n        <div className=\"profileClass\" style={{\"min-height\":\"100vh\"}}>\n            <Navbar></Navbar>\n            <div className=\"profileClass\">\n            <div className=\"flex text-center flex-col mt-11 md:text-2xl text-white\">\n                <div className=\"mb-5\">\n                    <h2 className=\"font-bold\">Wallet Address</h2>  \n                    {address}\n                </div>\n            </div>\n            <div className=\"flex flex-row text-center justify-center mt-10 md:text-2xl text-white\">\n                    <div>\n                        <h2 className=\"font-bold\">No. of NFTs</h2>\n                        {data.length}\n                    </div>\n                    <div className=\"ml-20\">\n                        <h2 className=\"font-bold\">Total Value</h2>\n                        {totalPrice} ETH\n                    </div>\n            </div>\n            <div className=\"flex flex-col text-center items-center mt-11 text-white\">\n                <h2 className=\"font-bold\">Your NFTs</h2>\n                <div className=\"flex justify-center flex-wrap max-w-screen-xl\">\n                    {data.map((value, index) => {\n                    return <NFTTile data={value} key={index}></NFTTile>;\n                    })}\n                </div>\n                <div className=\"mt-10 text-xl\">\n                    {data.length == 0 ? \"Oops, No NFT data to display (Are you logged in?)\":\"\"}\n                </div>\n            </div>\n            </div>\n        </div>\n    )\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}